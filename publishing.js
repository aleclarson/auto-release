(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{63:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;i(o(2));var n,r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,o):{};n.get||n.set?Object.defineProperty(t,o,n):t[o]=e[o]}return t.default=e,t}(o(0));i(o(1)),i(o(66));function i(e){return e&&e.__esModule?e:{default:e}}function l(e,t,o,r){n||(n="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var i=e&&e.defaultProps,l=arguments.length-3;if(t||0===l||(t={children:void 0}),t&&i)for(var s in i)void 0===t[s]&&(t[s]=i[s]);else t||(t=i||{});if(1===l)t.children=r;else if(l>1){for(var a=new Array(l),u=0;u<l;u++)a[u]=arguments[u+3];t.children=a}return{$$typeof:n,type:e,key:void 0===o?null:""+o,ref:null,props:t,_owner:null}}function s(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}const a=e=>{var t,o;return o=t=class extends r.default.Component{constructor(...e){super(...e),s(this,"state",{Comp:null})}componentDidMount(){!this.state.Comp&&this.props.shouldLoad&&e().then(e=>{this.setState({Comp:e.default})})}render(){const{Comp:e}=this.state;return e?r.default.createElement(e,this.props,this.props.children||null):null}},s(t,"defaultProps",{shouldLoad:!0}),o};a(()=>o.e(25).then(o.bind(null,67))),a(()=>o.e(25).then(o.bind(null,68)));var u=l("section",{},void 0,l("h1",{},void 0,"Publishing"),l("p",{},void 0,l("code",{},void 0,"auto-release"),"'s main use it to automate the release process for your project This can be broken down into three core steps:"),l("pre",{},void 0,l("code",{className:"language-text"},void 0,"pre: (optional) Check if new version",l("br",{}),l("br",{}),"1. Generate CHANGELOG.md",l("br",{}),"2. Publish code",l("br",{}),"3. Generate github release notes",l("br",{}))),l("p",{},void 0,l("code",{},void 0,"auto-release")," makes no assumptions about your publishing process. Each tool is a function that can be run in isolation and only does one thing really well. For instance, you could just use ",l("code",{},void 0,"auto changelog")," to generate the changelog and nothing else or use ",l("code",{},void 0,"auto version")," to calculate just the semver bump."));var c=e=>l("div",{className:e.className},void 0,u);t.default=c,e.exports=t.default}}]);
//# sourceMappingURL=publishing.js.map