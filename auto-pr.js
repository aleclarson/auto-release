(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{52:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,n=a(r(2)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};o.get||o.set?Object.defineProperty(t,r,o):t[r]=e[r]}return t.default=e,t}(r(0));a(r(1)),a(r(63));function a(e){return e&&e.__esModule?e:{default:e}}function i(e,t,r,n){o||(o="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var s=e&&e.defaultProps,a=arguments.length-3;if(t||0===a||(t={children:void 0}),t&&s)for(var i in s)void 0===t[i]&&(t[i]=s[i]);else t||(t=s||{});if(1===a)t.children=n;else if(a>1){for(var l=new Array(a),u=0;u<a;u++)l[u]=arguments[u+3];t.children=l}return{$$typeof:o,type:e,key:void 0===r?null:""+r,ref:null,props:t,_owner:null}}function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e}).apply(this,arguments)}function p(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},s=Object.keys(e);for(o=0;o<s.length;o++)r=s[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)r=s[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const c=e=>{let{to:t}=e,r=p(e,["to"]);return t.includes("http")?s.default.createElement("a",u({},e,{href:t})):("#"===t[0]&&(t=n.default.join("/auto-release/","pages/auto-pr.html")+t),s.default.createElement("a",u({},r,{href:t,onClick:r=>{if(r.preventDefault(),"#"===e.to)return!1;const o=new URL(n.default.join(window.location.origin,t));window.history.pushState((e=>({href:e.href,pathname:e.pathname,hash:e.hash,query:e.query}))(o),null,t),e.onClick();const s=new CustomEvent("changeLocation",{detail:o});return dispatchEvent(s),!1}})))};c.defaultProps={href:"",onClick:()=>{}};const d=e=>{var t,r;return r=t=class extends s.default.Component{constructor(...e){super(...e),l(this,"state",{Comp:null})}componentDidMount(){!this.state.Comp&&this.props.shouldLoad&&e().then(e=>{this.setState({Comp:e.default})})}render(){const{Comp:e}=this.state;return e?s.default.createElement(e,this.props,this.props.children||null):null}},l(t,"defaultProps",{shouldLoad:!0}),r};d(()=>r.e(24).then(r.bind(null,64))),d(()=>r.e(24).then(r.bind(null,65)));var h=i("h1",{},void 0,i("code",{},void 0,"auto pr")),f=i("p",{},void 0,"Set the status on a PR commit"),b=i("pre",{},void 0,i("code",{className:"language-bash"},void 0,">  auto pr -h",i("br",{}),i("br",{}),"Options",i("br",{}),i("br",{}),"  --sha string                      Specify a custom git sha. Defaults to the HEAD ",i("span",{className:"hljs-keyword"},void 0,"for")," a git repo ",i("span",{className:"hljs-keyword"},void 0,"in")," the current",i("br",{}),"                                    repository",i("br",{}),"  --pr number [required]            The pull request number you want the labels of",i("br",{}),"  --url string [required]           URL to associate with this status",i("br",{}),"  --state string [required]         State of the PR. [",i("span",{className:"hljs-string"},void 0,"'pending'"),", ",i("span",{className:"hljs-string"},void 0,"'success'"),", ",i("span",{className:"hljs-string"},void 0,"'error'"),", ",i("span",{className:"hljs-string"},void 0,"'failure'"),"]",i("br",{}),"  --description string [required]   A description of the status",i("br",{}),"  --context string [required]       A string label to differentiate this status from others",i("br",{}),i("br",{}),"Global Options",i("br",{}),i("br",{}),"  -h, --",i("span",{className:"hljs-built_in"},void 0,"help"),"            Display the ",i("span",{className:"hljs-built_in"},void 0,"help")," output ",i("span",{className:"hljs-keyword"},void 0,"for")," the ",i("span",{className:"hljs-built_in"},void 0,"command"),i("br",{}),"  -v, --verbose         Show some more logs",i("br",{}),"  -w, --very-verbose    Show a lot more logs",i("br",{}),"  --repo string         The repo to ",i("span",{className:"hljs-built_in"},void 0,"set")," the status on. Defaults to looking ",i("span",{className:"hljs-keyword"},void 0,"in")," the package.json",i("br",{}),"  --owner string        Version number to publish as. Defaults to reading from the package.json",i("br",{}),"  --githubApi string    Github API to use",i("br",{}),i("br",{}),"Examples",i("br",{}),i("br",{}),"$ auto pr \\",i("br",{}),"   --pr 32 \\",i("br",{}),"   --url http://your-ci.com/build/123 \\",i("br",{}),"   --state pending \\",i("br",{}),"   --description ",i("span",{className:"hljs-string"},void 0,'"Build still running..."')," \\",i("br",{}),"   --context build-check",i("br",{})));var m=e=>i("div",{className:e.className},void 0,i("section",{},void 0,h,f,i("h2",{id:"options"},void 0,"Options ",i(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#options","aria-hidden":"true"})),b));t.default=m,e.exports=t.default}}]);
//# sourceMappingURL=auto-pr.js.map