{"version":3,"sources":["webpack:///./docs/pages/getting-started.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","id","currentPage","aria-hidden","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18"],"mappings":"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","file":"getting-started.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto-release/','pages/getting-started.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Getting Started</h1>\n<p>Before we do anything we must first install <code>auto-release-cli</code> as a dev dependency.</p>\n<pre><code className=\"language-sh\">yarn add -D auto-release-cli<br /></code></pre>\n<h2 id=\"quick-setup\">Quick Setup <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#quick-setup\" aria-hidden=\"true\"></Link></h2>\n<p>To version, changelog, publish and release your code in all at the same time, we've included the <code>shipit</code> tool. This tool takes the default <code>auto</code> workflow and puts it into one command.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"scripts\"</span>: &#123;<br />    <span className=\"hljs-attr\">\"release\"</span>: <span className=\"hljs-string\">\"auto shipit\"</span><br />  &#125;<br />&#125;<br /></code></pre>\n<h2 id=\"detailed-setup\">Detailed Setup <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#detailed-setup\" aria-hidden=\"true\"></Link></h2>\n<p>The simplest workflow to get set up in just the <code>package.json</code> is by adding the following to your <code>package.json</code>. With this setup your application will not be able to use the <code>no-release</code> flag, but everything else will work just fine</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"scripts\"</span>: &#123;<br />    <span className=\"hljs-attr\">\"version\"</span>: <span className=\"hljs-string\">\"npm version &#96;auto version&#96; -m 'Bump version to: %s [skip ci]'\"</span>,<br />    <span className=\"hljs-attr\">\"publish\"</span>: <span className=\"hljs-string\">\"npm publish &amp;&amp; git push --follow-tags --set-upstream origin $branch\"</span>,<br />    <span className=\"hljs-attr\">\"release\"</span>: <span className=\"hljs-string\">\"auto changelog &amp;&amp; npm run version &amp;&amp; npm run publish &amp;&amp; auto release\"</span><br />  &#125;<br />&#125;<br /></code></pre>\n<h3 id=\"enabling-no-release-label\">Enabling <code>no-release</code> label <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#enabling-no-release-label\" aria-hidden=\"true\"></Link></h3>\n<p>To use the <code>no-release</code> label you have to get a little more involved and use a shell script. We could do the <code>if</code> checks in the <code>package.json</code>, but this would get messy and hard to read very quickly.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"scripts\"</span>: &#123;<br />    <span className=\"hljs-attr\">\"release\"</span>: <span className=\"hljs-string\">\"./scripts/release.sh\"</span><br />  &#125;<br />&#125;<br /></code></pre>\n<p>Here is an example release script for a single NPM package:</p>\n<pre><code className=\"language-sh\"><span className=\"hljs-built_in\">export</span> PATH=$(npm bin):<span className=\"hljs-variable\">$PATH</span><br /><br />VERSION=&#96;auto version&#96;<br /><br /><span className=\"hljs-comment\">## Support for label 'no-release'</span><br /><span className=\"hljs-keyword\">if</span> [ ! -z <span className=\"hljs-string\">\"<span className=\"hljs-variable\">$VERSION</span>\"</span> ]; <span className=\"hljs-keyword\">then</span><br />  <span className=\"hljs-comment\">## Update Changelog</span><br />  auto changelog<br /><br />  <span className=\"hljs-comment\">## Publish Package</span><br />  npm version <span className=\"hljs-variable\">$VERSION</span> -m <span className=\"hljs-string\">\"Bump version to: %s [skip ci]\"</span><br />  npm publish<br /><br />  <span className=\"hljs-comment\">## Create GitHub Release</span><br />  git push --follow-tags --<span className=\"hljs-built_in\">set</span>-upstream origin <span className=\"hljs-variable\">$branch</span><br />  auto release<br /><span className=\"hljs-keyword\">fi</span><br /></code></pre>\n<p>or if you are using lerna to manage a monorepo.</p>\n<pre><code className=\"language-sh\"><span className=\"hljs-built_in\">export</span> PATH=$(npm bin):<span className=\"hljs-variable\">$PATH</span><br /><br />VERSION=&#96;auto version&#96;<br /><br /><span className=\"hljs-keyword\">if</span> [ ! -z <span className=\"hljs-string\">\"<span className=\"hljs-variable\">$VERSION</span>\"</span> ]; <span className=\"hljs-keyword\">then</span><br />  auto changelog<br />  lerna publish --yes --force-publish=* <span className=\"hljs-variable\">$VERSION</span> -m <span className=\"hljs-string\">'%v [skip ci]'</span><br />  auto release<br /><span className=\"hljs-keyword\">fi</span><br /></code></pre>\n<h2 id=\"enterprise\">Enterprise <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#enterprise\" aria-hidden=\"true\"></Link></h2>\n<p>If you are using enterprise github <code>auto-release</code> lets you configure the github API URL that it uses. You can configure this by using the CLI option <code>--githubApi</code> or by setting the value in your <Link currentPage={(this && this.props || props).currentPage} to=\"/auto-release/pages/autorc.html#githubApi\">.autorc</Link>.</p>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}