(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{49:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;l(o(2));var r,s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,o):{};r.get||r.set?Object.defineProperty(t,o,r):t[o]=e[o]}return t.default=e,t}(o(0));l(o(1)),l(o(62));function l(e){return e&&e.__esModule?e:{default:e}}function n(e,t,o,s){r||(r="function"===typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var l=e&&e.defaultProps,n=arguments.length-3;if(t||0===n||(t={children:void 0}),t&&l)for(var a in l)void 0===t[a]&&(t[a]=l[a]);else t||(t=l||{});if(1===n)t.children=s;else if(n>1){for(var i=new Array(n),u=0;u<n;u++)i[u]=arguments[u+3];t.children=i}return{$$typeof:r,type:e,key:void 0===o?null:""+o,ref:null,props:t,_owner:null}}function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}const i=e=>{var t,o;return o=t=class extends s.default.Component{constructor(...e){super(...e),a(this,"state",{Comp:null})}componentDidMount(){!this.state.Comp&&this.props.shouldLoad&&e().then(e=>{this.setState({Comp:e.default})})}render(){const{Comp:e}=this.state;return e?s.default.createElement(e,this.props,this.props.children||null):null}},a(t,"defaultProps",{shouldLoad:!0}),o};i(()=>o.e(24).then(o.bind(null,63))),i(()=>o.e(24).then(o.bind(null,64)));var u=n("section",{},void 0,n("h1",{},void 0,n("code",{},void 0,"auto label")),n("p",{},void 0,"Get the labels for a pull request. Doesn't do much, but the return value lets you write you own scripts based off of the PR labels!"),n("pre",{},void 0,n("code",{className:"language-bash"},void 0,">  auto label -h",n("br",{}),n("br",{}),"usage: auto label [-h] --pr PR [--repo REPO] [--owner OWNER] [-v] [-vv]",n("br",{}),"                       [--githubApi GITHUBAPI]",n("br",{}),n("br",{}),n("br",{}),"Optional arguments:",n("br",{}),"  -h, --",n("span",{className:"hljs-built_in"},void 0,"help"),"            Show this ",n("span",{className:"hljs-built_in"},void 0,"help")," message and ",n("span",{className:"hljs-built_in"},void 0,"exit"),".",n("br",{}),"  --pr PR               The pull request number you want the labels of",n("br",{}),"  --repo REPO           The repo to ",n("span",{className:"hljs-built_in"},void 0,"set")," the status on. Defaults to looking ",n("span",{className:"hljs-keyword"},void 0,"in"),n("br",{}),"                        the package.json",n("br",{}),"  --owner OWNER         Version number to publish as. Defaults to reading",n("br",{}),"                        from the package.json",n("br",{}),"  -v, --verbose         Show some more logs",n("br",{}),"  -vv, --very-verbose   Show a lot more logs",n("br",{}),"  --githubApi GITHUBAPI",n("br",{}),"                        Github API to use",n("br",{}))));var p=e=>n("div",{className:e.className},void 0,u);t.default=p,e.exports=t.default}}]);
//# sourceMappingURL=auto-label.js.map