{"version":3,"sources":["webpack:///./docs/pages/auto-changelog.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","_ref6","id","currentPage","aria-hidden"],"mappings":"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","file":"auto-changelog.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto-release/','pages/auto-changelog.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1><code>auto changelog</code></h1>\n<p>Prepend release notes to <code>CHANGELOG.md</code>, create one if it doesn't exist, and commit the changes.</p>\n\n        <article className=\"message column is-warning\">\n          \n          <div className=\"message-body\">\n      <p>⚠️ This should be run before <code>npm version</code> so the <code>CHANGELOG.md</code> changes are committed before the release gets tagged.</p>\n\n        </div>\n      </article>\n    <pre><code className=\"language-bash\">&gt;  auto changelog -h<br /><br />usage: auto changelog [-h] [--from FROM] [--to TO] [--jira JIRA]<br />                         [--no-version-prefix] [-d] [-m MESSAGE] [-v] [-vv]<br />                         [--githubApi GITHUBAPI] [--name NAME] [--email EMAIL]<br /><br /><br />Optional arguments:<br />  -h, --<span className=\"hljs-built_in\">help</span>            Show this <span className=\"hljs-built_in\">help</span> message and <span className=\"hljs-built_in\">exit</span>.<br />  --from FROM           Tag to start changelog generation on. Defaults to<br />                        latest tag.<br />  --to TO               Tag to end changelog generation on. Defaults to HEAD.<br />  --jira JIRA           Jira base URL<br />  --no-version-prefix   Use the version as the tag without the &#96;v&#96; prefix<br />  -d, --dry-run         Dont actually commit status. Just <span className=\"hljs-built_in\">print</span> the request<br />                        body<br />  -m MESSAGE, --message MESSAGE<br />                        Message to commit the changelog with. Defaults to<br />                        <span className=\"hljs-string\">\"Update CHANGELOG.md [skip ci]\"</span><br />  -v, --verbose         Show some more logs<br />  -vv, --very-verbose   Show a lot more logs<br />  --githubApi GITHUBAPI<br />                        Github API to use<br />  --name NAME           Git name to commit and release with. Defaults to<br />                        package.json<br />  --email EMAIL         Git email to commit with. Defaults to package.json<br /></code></pre>\n<h2 id=\"jira\">Jira <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#jira\" aria-hidden=\"true\"></Link></h2>\n<p>To include Jira story information you must include a URL to your hosted JIRA instance as a CLI or <Link currentPage={(this && this.props || props).currentPage} to=\"/auto-release/pages/autorc.html\">.autorc\\`</Link> config option.</p>\n<h2 id=\"changelog-titles\">Changelog Titles <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#changelog-titles\" aria-hidden=\"true\"></Link></h2>\n<p>You can customize the changelog titles and even add custom ones. To see configuration <Link currentPage={(this && this.props || props).currentPage} to=\"/auto-release/pages/autorc.html#changelog-titles\">go here</Link>.</p>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}