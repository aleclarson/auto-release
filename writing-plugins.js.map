{"version":3,"sources":["webpack:///./docs/pages/writing-plugins.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","_ref6","_ref7","id","currentPage","aria-hidden","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33"],"mappings":"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","file":"writing-plugins.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto-release/','pages/writing-plugins.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Writing Plugins</h1>\n<p>If you've ever written a webpack plugin it's a lot like that.</p>\n<p>A plugin definition is:</p>\n<ul>\n<li>a class the has an <code>apply</code> function where a plugin hooks into various functions in auto (REQUIRED)</li>\n<li>a constructor where you can load plugin specific config</li>\n</ul>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; AutoRelease, IPlugin &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'auto-release-cli'</span>;<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> TestPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-keyword\">private</span> readonly config: <span className=\"hljs-built_in\">any</span>;<br /><br />  <span className=\"hljs-keyword\">constructor</span>(<span className=\"hljs-params\">config: <span className=\"hljs-built_in\">any</span></span>) &#123;<br />    <span className=\"hljs-keyword\">this</span>.config = config;<br />  &#125;<br /><br />  apply(auto: AutoRelease) &#123;<br />    <span className=\"hljs-comment\">// hook into auto</span><br />  &#125;<br />&#125;<br /></code></pre>\n<h2 id=\"constructor\">Constructor <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#constructor\" aria-hidden=\"true\"></Link></h2>\n<p>In the constructor you have access to any plugin specific config provided in the <code>.autorc</code>. It might be useful to write a more type-safe interface for your config.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; AutoRelease, IPlugin &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'auto-release-cli'</span>;<br /><br /><span className=\"hljs-keyword\">interface</span> ITestPluginConfig &#123;<br />  foo?: <span className=\"hljs-built_in\">string</span>;<br />  bar?: <span className=\"hljs-built_in\">boolean</span>;<br />&#125;<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> TestPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-keyword\">private</span> readonly config: ITestPluginConfig;<br /><br />  <span className=\"hljs-keyword\">constructor</span>(<span className=\"hljs-params\">config: ITestPluginConfig</span>) &#123;<br />    <span className=\"hljs-keyword\">this</span>.config = config;<br />  &#125;<br />&#125;<br /></code></pre>\n<h2 id=\"hooks\">Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#hooks\" aria-hidden=\"true\"></Link></h2>\n<p>Plugins work by hooking into various actions that <code>auto</code> has to do in order to facilitate a release or interact with your GitHub repo. The hooks that it exposes are:</p>\n<h3 id=\"beforerun\">beforeRun <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#beforerun\" aria-hidden=\"true\"></Link></h3>\n<p>Happens before anything is done. This is a great place to check for platform specific secrets such as a NPM token.</p>\n<pre><code className=\"language-ts\">auto.hooks.beforeRun.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> config =&gt; &#123;<br />  <span className=\"hljs-keyword\">if</span> (!process.env.NPM_TOKEN) &#123;<br />    auto.logger.log.warn(<span className=\"hljs-string\">'NPM Token is needed for the NPM plugin!'</span>);<br />  &#125;<br />&#125;);<br /></code></pre>\n<h3 id=\"beforeshipit\">beforeShipIt <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#beforeshipit\" aria-hidden=\"true\"></Link></h3>\n<p>Happens before <code>shipit</code> is run. This is a great throw an error if a token or key is not present.</p>\n<pre><code className=\"language-ts\">auto.hooks.beforeRun.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> config =&gt; &#123;<br />  <span className=\"hljs-keyword\">if</span> (!process.env.NPM_TOKEN) &#123;<br />    <span className=\"hljs-keyword\">throw</span> <span className=\"hljs-keyword\">new</span> <span className=\"hljs-built_in\">Error</span>(<span className=\"hljs-string\">'NPM Token is needed for the NPM plugin!'</span>);<br />  &#125;<br />&#125;);<br /></code></pre>\n<h3 id=\"getauthor\">getAuthor <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getauthor\" aria-hidden=\"true\"></Link></h3>\n<p>Get git author. Typically from a package distribution description file.</p>\n<pre><code className=\"language-ts\">auto.hooks.getAuthor.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> &#123; author &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />  <span className=\"hljs-keyword\">if</span> (author) &#123;<br />    <span className=\"hljs-keyword\">return</span> author;<br />  &#125;<br />&#125;);<br /></code></pre>\n<h3 id=\"getpreviousversion\">getPreviousVersion <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getpreviousversion\" aria-hidden=\"true\"></Link></h3>\n<p>Get the previous version. Typically from a package distribution description file.</p>\n<pre><code className=\"language-ts\">auto.hooks.getPreviousVersion.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> prefixRelease =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> &#123; version &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />  <span className=\"hljs-keyword\">if</span> (version) &#123;<br />    <span className=\"hljs-keyword\">return</span> prefixRelease(<br />      <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>)).version<br />    );<br />  &#125;<br />&#125;);<br /></code></pre>\n<h3 id=\"getrepository\">getRepository <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getrepository\" aria-hidden=\"true\"></Link></h3>\n<p>Get owner and repository. Typically from a package distribution description file.</p>\n<pre><code className=\"language-ts\">auto.hooks.getRepository.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> owner = <span className=\"hljs-comment\">// get the owner from package.json</span><br />  <span className=\"hljs-keyword\">const</span> repo = <span className=\"hljs-comment\">// get the repo from package.json</span><br /><br />  <span className=\"hljs-keyword\">return</span> &#123;<br />    owner,<br />    repo<br />  &#125;<br />&#125;);<br /></code></pre>\n<h3 id=\"renderchangelogline\">renderChangelogLine <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogline\" aria-hidden=\"true\"></Link></h3>\n<p>Change how the changelog renders lines. This hook provides the default line renderer so you don't have to change much.</p>\n<p>The following plugin would change all the bullet points in the changelog to star emojis.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateLogParse.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\">(<span className=\"hljs-params\">logParser</span>) =&gt;</span><br />  logParser.hooks.renderChangelogLine.tapPromise(<br />    <span className=\"hljs-string\">'Stars'</span>,<br />    <span className=\"hljs-keyword\">async</span> (commits, renderLine) =&gt;<br />      commits.map(<span className=\"hljs-function\"><span className=\"hljs-params\">commit</span> =&gt;</span> &#96;$&#123;renderLine(commit).replace(<span className=\"hljs-string\">'-'</span>, <span className=\"hljs-string\">':star:'</span>)&#125;\\n&#96;)<br />  );<br />);<br /></code></pre>\n<h3 id=\"renderchangelogtitle\">renderChangelogTitle <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogtitle\" aria-hidden=\"true\"></Link></h3>\n<p>Change how the changelog renders titles. The hook provides the current label for the section and all the configured changelog titles.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateLogParse.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\">(<span className=\"hljs-params\">logParser</span>) =&gt;</span><br />  logParser.hooks.renderChangelogTitle.tap(<br />    <span className=\"hljs-string\">'My Titles'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">label, changelogTitles</span>) =&gt;</span> &#96;:heart: $&#123;changelogTitles[label]&#125; :heart:&#96;<br />  );<br />);<br /></code></pre>\n<h3 id=\"renderchangelogauthor\">renderChangelogAuthor <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogauthor\" aria-hidden=\"true\"></Link></h3>\n<p>Change how the changelog renders authors. This is both the author on each commit note and the user in the author section (the part between parentheses). This is generally a link to some profile.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateLogParse.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\">(<span className=\"hljs-params\">logParser</span>) =&gt;</span><br />  logParser.hooks.renderChangelogAuthor.tap(<br />    <span className=\"hljs-string\">'test'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">author, commit</span>) =&gt;</span> &#96;:heart: $&#123;author.name&#125;/$&#123;commit.authorEmail&#125; :heart:&#96;<br />  );<br />);<br /></code></pre>\n<h3 id=\"renderchangelogauthorline\">renderChangelogAuthorLine <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogauthorline\" aria-hidden=\"true\"></Link></h3>\n<p>Change how the changelog renders authors in the authors section. The hook provides the author object and the user created with <code>renderChangelogAuthor</code>. Here is where you might display extra info about the author, such as thier full name,.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateLogParse.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\">(<span className=\"hljs-params\">logParser</span>) =&gt;</span><br />  logParser.hooks.renderChangelogAuthorLine.tap(<br />    <span className=\"hljs-string\">'test'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">author, user</span>) =&gt;</span> &#96;:shipit: $&#123;author.name&#125; ($&#123;user&#125;)\\n&#96;<br />  );<br />);<br /></code></pre>\n<h3 id=\"publish\">publish <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#publish\" aria-hidden=\"true\"></Link></h3>\n<p>Publish the package to some package distributor. You must push the tags to github!</p>\n<pre><code className=\"language-ts\">auto.hooks.publish.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> (version: SEMVER) =&gt; &#123;<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<br />    <span className=\"hljs-string\">'version'</span>,<br />    version,<br />    <span className=\"hljs-string\">'-m'</span>,<br />    <span className=\"hljs-string\">'Bump version to: %s [skip ci]'</span><br />  ]);<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<span className=\"hljs-string\">'publish'</span>]);<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'git'</span>, [<br />    <span className=\"hljs-string\">'push'</span>,<br />    <span className=\"hljs-string\">'--follow-tags'</span>,<br />    <span className=\"hljs-string\">'--set-upstream'</span>,<br />    <span className=\"hljs-string\">'origin'</span>,<br />    <span className=\"hljs-string\">'$branch'</span><br />  ]);<br />&#125;);<br /></code></pre>\n<h2 id=\"example-plugin---npm-(simple)\">Example Plugin - NPM (simple) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#example-plugin---npm-(simple)\" aria-hidden=\"true\"></Link></h2>\n<p>To create a plugin simply make a class with an <code>apply</code> method and tap into the hooks you need.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> * <span className=\"hljs-keyword\">as</span> fs <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'fs'</span>;<br /><span className=\"hljs-keyword\">import</span> &#123; promisify &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'util'</span>;<br /><br /><span className=\"hljs-keyword\">import</span> &#123; IAutoHooks, AutoRelease, SEMVER, execPromise &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'auto'</span>;<br /><span className=\"hljs-keyword\">import</span> getConfigFromPackageJson <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'./package-config'</span>;<br /><br /><span className=\"hljs-keyword\">const</span> readFile = promisify(fs.readFile);<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> NPMPlugin &#123;<br />  <span className=\"hljs-keyword\">public</span> apply(auto: AutoRelease) &#123;<br />    auto.hooks.getAuthor.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> &#123; author &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />      <span className=\"hljs-keyword\">if</span> (author) &#123;<br />        auto.logger.log.info(<span className=\"hljs-string\">'NPM: Got author information from package.json'</span>);<br />        <span className=\"hljs-keyword\">return</span> author;<br />      &#125;<br />    &#125;);<br /><br />    auto.hooks.getPreviousVersion.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> prefixRelease =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> &#123; version &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />      auto.logger.log.info(<br />        <span className=\"hljs-string\">'NPM: Got previous version from package.json - '</span>,<br />        version<br />      );<br /><br />      <span className=\"hljs-keyword\">if</span> (version) &#123;<br />        <span className=\"hljs-keyword\">return</span> prefixRelease(<br />          <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>)).version<br />        );<br />      &#125;<br />    &#125;);<br /><br />    auto.hooks.getRepository.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      auto.logger.log.info(<span className=\"hljs-string\">'NPM: getting repo information from package.json'</span>);<br />      <span className=\"hljs-keyword\">return</span> getConfigFromPackageJson();<br />    &#125;);<br /><br />    auto.hooks.publish.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> (version: SEMVER) =&gt; &#123;<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<br />        <span className=\"hljs-string\">'version'</span>,<br />        version,<br />        <span className=\"hljs-string\">'-m'</span>,<br />        <span className=\"hljs-string\">'Bump version to: %s [skip ci]'</span><br />      ]);<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<span className=\"hljs-string\">'publish'</span>]);<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'git'</span>, [<br />        <span className=\"hljs-string\">'push'</span>,<br />        <span className=\"hljs-string\">'--follow-tags'</span>,<br />        <span className=\"hljs-string\">'--set-upstream'</span>,<br />        <span className=\"hljs-string\">'origin'</span>,<br />        <span className=\"hljs-string\">'$branch'</span><br />      ]);<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}