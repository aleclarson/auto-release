{"version":3,"sources":["webpack:///./docs/pages/plugins.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","currentPage","target","id","aria-hidden","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18"],"mappings":"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","file":"plugins.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto-release/','pages/plugins.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Plugins</h1>\n<p><code>auto</code> uses the package <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/webpack/tapable\" className=\"external-link\">tapable</Link> to expose a plugin system. If you've ever written a webpack plugin it's a lot like that.</p>\n<h2 id=\"using-plugins\">Using Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#using-plugins\" aria-hidden=\"true\"></Link></h2>\n<p>To use a plugin you can either supply the plugin via a CLI arg or in your <Link currentPage={(this && this.props || props).currentPage} to=\"/auto-release/pages/autorc.html#plugins\">.autorc</Link>.</p>\n<p>There are three ways to load a plugin.</p>\n<h3 id=\"1.-official-plugins\">1. Official Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#1.-official-plugins\" aria-hidden=\"true\"></Link></h3>\n<p>To use an official plugin all you have to do is supply the name. Currently the only supported plugin is the <code>npm</code> plugin.</p>\n<pre><code className=\"language-sh\">auto shipit --plugins npm<br /></code></pre>\n<h3 id=\"2.-npm-package\">2. <code>npm</code> package <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#2.-npm-package\" aria-hidden=\"true\"></Link></h3>\n<p>If you are using a plugin distributed on <code>npm</code> simply supply the name.</p>\n<pre><code className=\"language-sh\">auto shipit --plugins NPM_PACKAGE_NAME<br /></code></pre>\n<h3 id=\"3.-path\">3. Path <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#3.-path\" aria-hidden=\"true\"></Link></h3>\n<p>Or if you have a plugin locally supply the path.</p>\n<pre><code className=\"language-sh\">auto shipit --plugins ../path/to/plugin.js<br /></code></pre>\n<h3 id=\"multiple\">Multiple <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#multiple\" aria-hidden=\"true\"></Link></h3>\n<p>If you want to use multiple plugins you can supply multiple.</p>\n<pre><code className=\"language-sh\">auto shipit --plugins npm NPM_PACKAGE_NAME ../path/to/plugin.js<br /></code></pre>\n<h2 id=\"writing-plugins\">Writing Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#writing-plugins\" aria-hidden=\"true\"></Link></h2>\n<h3 id=\"hooks\">Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#hooks\" aria-hidden=\"true\"></Link></h3>\n<p>Plugins work by hooking into various actions that <code>auto</code> has to do in order to facilitate a release or interact with your GitHub repo. The hooks that it exposes are:</p>\n<ul>\n<li>beforeRun - Happens before anything is done. This is a great place to check for platform specific secrets such as a NPM token.</li>\n<li>getAuthor - Get git author</li>\n<li>getPreviousVersion - Get the previous version</li>\n<li>getRepository - Get owner/repo</li>\n<li>publish - Publish the package</li>\n</ul>\n<h3 id=\"example-plugin---npm\">Example Plugin - NPM <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#example-plugin---npm\" aria-hidden=\"true\"></Link></h3>\n<p>To create a plugin simply make a class with an <code>apply</code> method and tap into the hooks you need.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> * <span className=\"hljs-keyword\">as</span> fs <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'fs'</span>;<br /><span className=\"hljs-keyword\">import</span> &#123; promisify &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'util'</span>;<br /><br /><span className=\"hljs-keyword\">import</span> &#123; IAutoHooks, AutoRelease, SEMVER, execPromise &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'auto'</span>;<br /><span className=\"hljs-keyword\">import</span> getConfigFromPackageJson <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'./package-config'</span>;<br /><br /><span className=\"hljs-keyword\">const</span> readFile = promisify(fs.readFile);<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> NPMPlugin &#123;<br />  <span className=\"hljs-keyword\">public</span> apply(auto: AutoRelease) &#123;<br />    auto.hooks.getAuthor.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> &#123; author &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />      <span className=\"hljs-keyword\">if</span> (author) &#123;<br />        auto.logger.log.info(<span className=\"hljs-string\">'NPM: Got author information from package.json'</span>);<br />        <span className=\"hljs-keyword\">return</span> author;<br />      &#125;<br />    &#125;);<br /><br />    auto.hooks.getPreviousVersion.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> prefixRelease =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> &#123; version &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />      auto.logger.log.info(<br />        <span className=\"hljs-string\">'NPM: Got previous version from package.json - '</span>,<br />        version<br />      );<br /><br />      <span className=\"hljs-keyword\">if</span> (version) &#123;<br />        <span className=\"hljs-keyword\">return</span> prefixRelease(<br />          <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>)).version<br />        );<br />      &#125;<br />    &#125;);<br /><br />    auto.hooks.getRepository.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      auto.logger.log.info(<span className=\"hljs-string\">'NPM: getting repo information from package.json'</span>);<br />      <span className=\"hljs-keyword\">return</span> getConfigFromPackageJson();<br />    &#125;);<br /><br />    auto.hooks.publish.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> (version: SEMVER) =&gt; &#123;<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<br />        <span className=\"hljs-string\">'version'</span>,<br />        version,<br />        <span className=\"hljs-string\">'-m'</span>,<br />        <span className=\"hljs-string\">'Bump version to: %s [skip ci]'</span><br />      ]);<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<span className=\"hljs-string\">'publish'</span>]);<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'git'</span>, [<br />        <span className=\"hljs-string\">'push'</span>,<br />        <span className=\"hljs-string\">'--follow-tags'</span>,<br />        <span className=\"hljs-string\">'--set-upstream'</span>,<br />        <span className=\"hljs-string\">'origin'</span>,<br />        <span className=\"hljs-string\">'$branch'</span><br />      ]);<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}