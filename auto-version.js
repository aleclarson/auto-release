(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{55:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=i(a(2)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,a):{};o.get||o.set?Object.defineProperty(t,a,o):t[a]=e[a]}return t.default=e,t}(a(0));i(a(1)),i(a(66));function i(e){return e&&e.__esModule?e:{default:e}}function n(e,t,a,r){o||(o="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var s=e&&e.defaultProps,i=arguments.length-3;if(t||0===i||(t={children:void 0}),t&&s)for(var n in s)void 0===t[n]&&(t[n]=s[n]);else t||(t=s||{});if(1===i)t.children=r;else if(i>1){for(var l=new Array(i),u=0;u<i;u++)l[u]=arguments[u+3];t.children=l}return{$$typeof:o,type:e,key:void 0===a?null:""+a,ref:null,props:t,_owner:null}}function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e}).apply(this,arguments)}function d(e,t){if(null==e)return{};var a,o,r=function(e,t){if(null==e)return{};var a,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)a=s[o],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)a=s[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const c=e=>{let{to:t}=e,a=d(e,["to"]);return t.includes("http")?s.default.createElement("a",u({},e,{href:t})):("#"===t[0]&&(t=r.default.join("/auto-release/","pages/auto-version.html")+t),s.default.createElement("a",u({},a,{href:t,onClick:a=>{if(a.preventDefault(),"#"===e.to)return!1;const o=new URL(r.default.join(window.location.origin,t));window.history.pushState((e=>({href:e.href,pathname:e.pathname,hash:e.hash,query:e.query}))(o),null,t),e.onClick();const s=new CustomEvent("changeLocation",{detail:o});return dispatchEvent(s),!1}})))};c.defaultProps={href:"",onClick:()=>{}};const h=e=>{var t,a;return a=t=class extends s.default.Component{constructor(...e){super(...e),l(this,"state",{Comp:null})}componentDidMount(){!this.state.Comp&&this.props.shouldLoad&&e().then(e=>{this.setState({Comp:e.default})})}render(){const{Comp:e}=this.state;return e?s.default.createElement(e,this.props,this.props.children||null):null}},l(t,"defaultProps",{shouldLoad:!0}),a};h(()=>a.e(25).then(a.bind(null,67))),h(()=>a.e(25).then(a.bind(null,68)));var p=n("h1",{},void 0,n("code",{},void 0,"auto version")),v=n("p",{},void 0,"Get the semantic version bump for the given changes. Requires all PRs to have labels for the change type. If a PR does not have a label associated with it, it will default to ",n("code",{},void 0,"patch"),"."),f=n("pre",{},void 0,n("code",{className:"language-bash"},void 0,">  auto version -h",n("br",{}),n("br",{}),"Options",n("br",{}),n("br",{}),"  --only-publish-with-release-label    Only bump version ",n("span",{className:"hljs-keyword"},void 0,"if")," ",n("span",{className:"hljs-string"},void 0,"'release'")," label is on pull request",n("br",{}),"  --skip-release-labels string[]       Labels that will not create a release. Defaults to just ",n("span",{className:"hljs-string"},void 0,"'skip-release'"),n("br",{}),n("br",{}),"Global Options",n("br",{}),n("br",{}),"  -h, --",n("span",{className:"hljs-built_in"},void 0,"help"),"            Display the ",n("span",{className:"hljs-built_in"},void 0,"help")," output ",n("span",{className:"hljs-keyword"},void 0,"for")," the ",n("span",{className:"hljs-built_in"},void 0,"command"),n("br",{}),"  -v, --verbose         Show some more logs",n("br",{}),"  -w, --very-verbose    Show a lot more logs",n("br",{}),"  --repo string         The repo to ",n("span",{className:"hljs-built_in"},void 0,"set")," the status on. Defaults to looking ",n("span",{className:"hljs-keyword"},void 0,"in")," the package definition ",n("span",{className:"hljs-keyword"},void 0,"for")," the platform",n("br",{}),"  --owner string        Version number to publish as. Defaults to reading from the package definition ",n("span",{className:"hljs-keyword"},void 0,"for")," the platform",n("br",{}),"  --github-api string   GitHub API to use",n("br",{}),"  --plugins string[]    Plugins to load auto-release with. (defaults to just npm)",n("br",{}),n("br",{}),"Examples",n("br",{}),n("br",{}),"  Get the new version using the last release     $ auto version",n("br",{}),"  to head",n("br",{}),"  Skip releases with multiple labels             $ auto version --skip-release-labels documentation CI",n("br",{}),n("br",{}))),b=n("p",{},void 0,"Useful in conjunction with ",n("code",{},void 0,"npm version")," to auto-version releases."),g=n("p",{},void 0,"To create a prerelease add the ",n("code",{},void 0,"prerelease")," label to your pull request."),m=n("p",{},void 0,"To not create a release for a pull request add the ",n("code",{},void 0,"skip-release")," label. Any pull request with this tag will make ",n("code",{},void 0,"auto version")," return ",n("code",{},void 0,"''"),"."),y=n("article",{className:"message column is-warning"},void 0,n("div",{className:"message-body"},void 0,n("p",{},void 0,"⚠️ You must check the return value of ",n("code",{},void 0,"auto version")," in a bash script like in the example configuration for the ",n("code",{},void 0,"skip-release")," label to function properly."))),w=n("code",{},void 0,"skipReleaseLabels"),k=n("pre",{},void 0,n("code",{className:"language-sh"},void 0,"auto version --skip-release-labels project-files --skip-release-labels documentation",n("br",{}))),j=n("code",{},void 0,".autorc");var P=e=>n("div",{className:e.className},void 0,n("section",{},void 0,p,v,f,b,n("h2",{id:"prerelease"},void 0,"Prerelease ",n(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#prerelease","aria-hidden":"true"})),g,n("h2",{id:"no-release"},void 0,"No Release ",n(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#no-release","aria-hidden":"true"})),m,y,n("h3",{id:"multiple"},void 0,"Multiple ",n(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#multiple","aria-hidden":"true"})),n("p",{},void 0,"You can configure multiple labels to skip releasing as well. To do this use the ",w," options. This can also be configured via the ",n(c,{currentPage:e.currentPage,to:"/auto-release/pages/autorc.html#multiple-no-version"},void 0,".autorc"),"."),k,n("h2",{id:"configure-versioning-labels"},void 0,"Configure Versioning Labels ",n(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#configure-versioning-labels","aria-hidden":"true"})),n("p",{},void 0,"You can customize the versioning labels in the ",j,". To see configuration ",n(c,{currentPage:e.currentPage,to:"/auto-release/pages/autorc.html#versioning-labels"},void 0,"go here"),".")));t.default=P,e.exports=t.default}}]);
//# sourceMappingURL=auto-version.js.map