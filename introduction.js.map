{"version":3,"sources":["webpack:///./docs/pages/introduction.md"],"names":["_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","_classnames","_reactIdealImage","imageSources","../images/auto.gif","e","then","t","bind","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","props","shouldLoad","c","setState","default","render","createElement","children","_jsx","image","ImageProvider","src","_extends","className","width","height","placeholder","lqip","preSrc","srcSet","images","map","i","_objectSpread","path","alt","_ref3"],"mappings":"4JAEMA,EAAAC,EAAA,UACAC,ySAAAC,CAAAF,EAAA,IACAG,EAAAJ,EAAAC,EAAA,IAgGFI,EAAAL,EAAAC,EAAA,6yBAEA,MAAMK,GACJC,qBAAsB,IAAMN,EAAAO,EAAA,IAAAC,KAAAR,EAAAS,EAAAC,KAAA,aAiDhC,MAAMC,EAAgBC,IAAQ,IAAAC,EAAAC,EAAA,OAAAA,EAAAD,gBACdE,UAAMC,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,KAAA,SAM1BC,KAAM,OAGRC,qBACOF,KAAKG,MAAMF,MAAQD,KAAKI,MAAMC,YACjCd,IAAWJ,KAAKmB,IACdN,KAAKO,UACHN,KAAMK,EAAEE,YAMhBC,SACE,MAAMR,KAAEA,GAASD,KAAKG,MACtB,OAAOF,EAAOP,UAAMgB,cAAcT,EAAMD,KAAKI,MAAOJ,KAAKI,MAAMO,UAAY,MAAQ,OAtB3DZ,EAAAP,EAAA,gBAGxBa,YAAY,IAHYZ,GA2BbH,EAAc,IAAMX,EAAAO,EAAA,IAAAC,KAAAR,EAAAU,KAAA,WACdC,EAAc,IAAMX,EAAAO,EAAA,IAAAC,KAAAR,EAAAU,KAAA,iBAKrCuB,EAAA,oBACEA,EAAA,cAAGA,gBA7EwBlB,UAAMC,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,KAAA,SAE7Ca,MAAO,KACPC,cAAe9B,EAAagB,KAAKI,MAAMW,OAGzCb,oBACOF,KAAKG,MAAMU,OACdb,KAAKG,MAAMW,gBAAgB3B,KAAKmB,IAC9BN,KAAKO,UACHM,MAAOP,EAAEE,YAMjBC,SACE,IAAII,MAAEA,GAAUb,KAAKG,MAErB,OAAOU,GAA0B,kBAAVA,EACrBjC,EAAA4B,QAAAE,cAAC3B,EAAAyB,QAADQ,KACMhB,KAAKI,OACTa,WAAW,EAAAnC,EAAA0B,SAAU,QAASR,KAAKI,MAAMa,WACzCF,IAAKF,EAAME,IAAIA,IACfG,MAAOL,EAAME,IAAIG,OAASL,EAAMK,MAChCC,OAAQN,EAAME,IAAII,QAAUN,EAAMM,OAClCC,aAAeC,KAAMR,EAAMS,QAC3BC,OAAQV,EAAME,IAAIS,OACdX,EAAME,IAAIS,OAAOC,IAAIC,wUAACC,IACjBD,GACHX,IAAKW,EAAEE,UAGPb,IAAKF,EAAME,IACXG,MAAOL,EAAMK,WAInBN,EAAA,OAAKK,WAAW,EAAAnC,EAAA0B,SAAU,QAASR,KAAKI,MAAMa,WAAYF,IAAKF,OAuC1CE,IAAI,qBAAqBc,IAAI,WAAWZ,UAAU,kBACnFL,EAAA,MAAIK,UAAU,0BAAd,4CACAL,EAAA,yHACAA,EAAA,mCACAA,EAAA,eACAA,EAAA,qEACAA,EAAA,0CAA4BA,EAAA,+BAA5B,UACAA,EAAA,qGACAA,EAAA,6CAEAA,EAAA,oDACAA,EAAA,eACAA,EAAA,0CACAA,EAAA,yCACAA,EAAA,+DACAA,EAAA,wDAlByBR,GACnBQ,EAAA,OAAKK,UAAWb,EAAMa,gBAAtB,EAAAa","file":"introduction.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto-release/','pages/introduction.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = { \n      '../images/auto.gif': () => import(\n        /* webpackChunkName: \"image-auto.gif\" */\n        '.././images/auto.gif'\n      )\n     };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <p><LazyImageComponent src=\"../images/auto.gif\" alt=\"Markdown\" className=\"header-image\" /></p>\n<h1 className=\"has-text-centered\">ðŸš€ auto-release ðŸš€</h1>\n<p>CI/CD helpers for github releases. Generate releases based on semantic version labels on pull requests.</p>\n<p>Release Features:</p>\n<ul>\n<li>Release every merge to master based on a PR labels</li>\n<li>Skip a release with the <code>no-release</code> label</li>\n<li>Generate a changelog with fancy headers, authors, and monorepo package association</li>\n<li>Generate a Github release</li>\n</ul>\n<p>Pull Request Interaction Features:</p>\n<ul>\n<li>Get the labels for a PR</li>\n<li>Set the status of a PR</li>\n<li>Check that a pull request has a SemVer label</li>\n<li>Comment on a PR with markdown</li>\n</ul>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}